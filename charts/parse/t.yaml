---
# Source: parse/charts/postgresql/templates/pgsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-postgresql
type: Opaque
stringData:
  postgresql-password: 
    
      "postgres"
---
# Source: parse/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-parse
type: Opaque
stringData:
  master-key: 
    
      "adminadmin"
---
# Source: parse/templates/configmap.yaml
apiVersion: v1
data:
  app-id: 
   
    "MyParseApp"
    
  #database-url: "postgres://postgres:@parse-postgresql/postgres"

kind: ConfigMap
metadata:
  name: parse
  namespace: default
---
# Source: parse/charts/postgresql/templates/pg-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: 
    
      "/ParesDatabase"
---
# Source: parse/charts/postgresql/templates/pg-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: parse/charts/postgresql/templates/pg-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    postgresql.service: postgresql
---
# Source: parse/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dashboard
spec:
  ports:
  - name: "4040"
    port: 4040
    targetPort: 4040
  selector:
      dashboard.service: dashboard
---
# Source: parse/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
  selector:
    io.kompose.service: server
status:
  loadBalancer: {}
---
# Source: parse/charts/postgresql/templates/pg-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      postgresql.service: postgresql
  template:
    metadata:
      labels:
        postgresql.service: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
             name: secret-postgresql
             key: postgresql-password
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_DB
          value: "postgres"
        ports:
        - name: postgresql
          containerPort: 5432
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgresql-data
      volumes:
       - name: postgresql-data
         persistentVolumeClaim:
           claimName: pvc-hostpath
---
# Source: parse/templates/dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
spec1:
  replicas: 1
  selector:
    matchLabels:
      dashboard.service: dashboard
  template:
    metadata:
      labels:
        dashboard.service: dashboard
    spec:
      containers:
#      - command: ["node"]
 #       args: ["Parse-Dashboard/index.js"]
      - name: dashboard
        image: parseplatform/parse-dashboard
        imagePullPolicy: IfNotPresent
        env:
        - name: PARSE_DASHBOARD_ALLOW_INSECURE_HTTP
          value:
            
              "false"
            
        - name: PARSE_DASHBOARD_APP_ID
          value: "MyParseApp"
        - name: PARSE_DASHBOARD_MASTER_KEY
          value: "adminadmin"
        - name: PARSE_DASHBOARD_SERVER_URL
          value:
            
              https://parse.rayvarz.link/parse
            
        - name: PARSE_DASHBOARD_USER_ID
          value: "user"
        - name: PARSE_DASHBOARD_USER_PASSWORD
          value: "user"
        ports:
        - name: dashboard-http
          containerPort: 4040
---
# Source: parse/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: server
    spec:
      containers:
        - env:
             - name: PARSE_SERVER_APPLICATION_ID
               valueFrom:
                 configMapKeyRef:
                   name: parse
                   key: app-id
             - name: PARSE_SERVER_MASTER_KEY
               valueFrom:
                 secretKeyRef:
                   name: secret-parse
                   key: master-key
             - name: POSTGRES_PASS
               valueFrom:
                 secretKeyRef:
                   name: secret-postgresql
                   key: postgresql-password
             - name: PARSE_SERVER_DATABASE_URI
               value: postgres://postgres:$(POSTGRES_PASS)@postgresql/postgres
          image: parseplatform/parse-server
          name: server
          ports:
            - containerPort: 1337
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: parse/templates/dashboard-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dashboard-ingress
  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-prod 
    kubernetes.io/ingress.class: "traefik"
      
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure" 
    traefik.ingress.kubernetes.io/router.tls: "true"
      
spec:
  rules:
  - host: 
     dashboard.rayvarz.link
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: dashboard
              port:
                number: 4040
 
  tls:
    - secretName: parse-tls
---
# Source: parse/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parse-ingress
  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-prod 
    kubernetes.io/ingress.class: "traefik"
      
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure" 
    traefik.ingress.kubernetes.io/router.tls: "true"
      
spec:
  rules:
  - host: 
     parse.rayvarz.link
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: server
              port:
                number: 1337
 
  tls:
    - secretName: parse-tls
---
# Source: parse/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "parse.rayvarz.link"
  namespace: default
spec:
  secretName: parse-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: "parse.rayvarz.link"
  dnsNames:
  - "parse.rayvarz.link"
  - "dashboard.rayvarz.link"
---
# Source: parse/templates/clusterIssuer-letsencrypt.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: default
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: r.finland88@gmail.com   
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: traefik
